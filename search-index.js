var searchIndex = new Map(JSON.parse('[\
["heapless_matrix",{"doc":"","t":"FNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNKKKKRMMMMMMMMMMM","n":["Matrix","add","add_assign","borrow","borrow_mut","clone","clone_into","det","eq","eye","fmt","from","from_vector","index","index_mut","into","inv","matrix_ops","matrix_trait","mul","new","sub_matrix","swap_rows","to_double","to_owned","transpose","try_from","try_into","type_id","x_concat","y_concat","IsSquareMatrix","MatrixConcat","MatrixTrait","SquareMatrix","TransposeType","det","eye","from_vector","inv","new","sub_matrix","swap_rows","to_double","transpose","x_concat","y_concat"],"q":[[0,"heapless_matrix"],[31,"heapless_matrix::matrix_trait"],[47,"core::option"],[48,"core::fmt"],[49,"core::fmt"],[50,"core::any"]],"d":["","","","","","","","","","","","Returns the argument unchanged.","Function used to create a heapless matrix from an array …","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Example:","","","","","","","","Function that creates an identity matrix","Function that creates an heapless matrix from an array","","Function that creates an matrix where all elements are …","","","Function that converts a 1x1 matrix into a f64","Function that transposes a matrix","Function that concatenates matrices horizontally","Function that concatenates matrices vertically"],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,15,13,15,15,13,15,15,15,15,15,16,16],"f":"`{{bb}c{}}{{bb}d}{ce{}{}}0{bb}{{ce}d{}{}}{bf}{{bb}h}{{}{{j{b}}}}{{bl}n}{cc{}}{{{A`{{A`{f}}}}}{{j{b}}}}{{bAb}c{}}09{b{{Af{bAd}}}}``<5{{bAbAb}{{Af{bAd}}}}{{bAbAb}{{Af{dAd}}}}{b{{j{f}}}}={bc{}}{c{{Af{e}}}{}{}}0{cAh{}}{{bb}{{j{b}}}}0`````{Ajf}{{}{{j{{An{}{{Al{c}}}}}}}An}{{{A`{{A`{f}}}}}{{j{{An{}{{Al{c}}}}}}}An}{Aj{{Af{bAd}}}}2{{{An{}{{Al{c}}}}AbAb}{{Af{bAd}}}An}{{{An{}{{Al{c}}}}AbAb}{{Af{dAd}}}An}{{{An{}{{Al{c}}}}}{{j{f}}}An}{{{An{}{{Al{c}}}}}cAn}{{B`b}{{j{b}}}}0","c":[],"p":[[5,"Matrix",0],[1,"unit"],[1,"f64"],[1,"bool"],[6,"Option",47],[5,"Formatter",48],[8,"Result",48],[1,"array"],[1,"usize"],[1,"str"],[6,"Result",49],[5,"TypeId",50],[10,"SquareMatrix",31],[17,"TransposeType"],[10,"MatrixTrait",31],[10,"MatrixConcat",31]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
